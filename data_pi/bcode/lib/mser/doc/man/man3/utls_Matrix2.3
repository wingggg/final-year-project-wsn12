.TH "utls::Matrix2" 3 "22 Oct 2006" "Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
utls::Matrix2 \- 
.SH SYNOPSIS
.br
.PP
\fC#include <matrix.h>\fP
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMatrix2\fP (const double a11=0, const double a12=0, const double a21=0, const double a22=0)"
.br
.ti -1c
.RI "\fBMatrix2\fP (const double *A)"
.br
.ti -1c
.RI "\fBMatrix2\fP (const \fBMatrix2\fP &other)"
.br
.ti -1c
.RI "\fB~Matrix2\fP ()"
.br
.ti -1c
.RI "void \fBdump\fP (void) const "
.br
.ti -1c
.RI "\fBMatrix2\fP \fBoperator *\fP (const double s) const "
.br
.ti -1c
.RI "\fBMatrix2\fP \fBoperator/\fP (const double s) const "
.br
.ti -1c
.RI "\fBMatrix2\fP \fBoperator+\fP (const double s) const "
.br
.ti -1c
.RI "\fBMatrix2\fP \fBoperator-\fP (const double s) const "
.br
.ti -1c
.RI "void \fBoperator=\fP (const \fBMatrix2\fP &other)"
.br
.ti -1c
.RI "\fBMatrix2\fP \fBoperator *\fP (const \fBMatrix2\fP &m) const "
.br
.ti -1c
.RI "\fBMatrix2\fP \fBoperator+\fP (const \fBMatrix2\fP &m) const "
.br
.ti -1c
.RI "\fBMatrix2\fP \fBoperator-\fP (const \fBMatrix2\fP &m) const "
.br
.ti -1c
.RI "\fBMatrix2\fP \fBinv\fP (void) const "
.br
.ti -1c
.RI "\fBMatrix2\fP \fBtranspose\fP (void) const "
.br
.ti -1c
.RI "double \fBdet\fP (void) const "
.br
.ti -1c
.RI "double \fBtrace\fP (void) const "
.br
.ti -1c
.RI "\fBMatrix2\fP \fBsqrt\fP (void) const "
.br
.ti -1c
.RI "double \fBfnorm\fP (void) const "
.br
.ti -1c
.RI "double * \fBoperator[]\fP (int row_idx) const "
.br
.ti -1c
.RI "void \fBeye\fP ()"
.br
.ti -1c
.RI "void \fBinv_i\fP (void)"
.br
.ti -1c
.RI "void \fBtranspose_i\fP (void)"
.br
.ti -1c
.RI "void \fBsqrt_i\fP (void)"
.br
.ti -1c
.RI "void \fBfnormalize\fP (void)"
.br
.ti -1c
.RI "void \fBschur_sym\fP (\fBMatrix2\fP &Q, \fBMatrix2\fP &T) const "
.br
.ti -1c
.RI "\fBMatrix2\fP \fBchol\fP () const "
.br
.ti -1c
.RI "void \fBQR\fP (\fBMatrix2\fP &Q, \fBMatrix2\fP &R) const "
.br
.ti -1c
.RI "void \fBsvd\fP (\fBMatrix2\fP &U, \fBMatrix2\fP &S, \fBMatrix2\fP &V) const "
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "double \fBa\fP [2][2]"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "utls::Matrix2::Matrix2 (const double a11 = \fC0\fP, const double a12 = \fC0\fP, const double a21 = \fC0\fP, const double a22 = \fC0\fP)"
.PP
.SS "utls::Matrix2::Matrix2 (const double * A)"
.PP
.SS "utls::Matrix2::Matrix2 (const \fBMatrix2\fP & other)"
.PP
.SS "utls::Matrix2::~Matrix2 ()"
.PP
.SH "Member Function Documentation"
.PP 
.SS "\fBMatrix2\fP utls::Matrix2::chol () const"
.PP
.SS "double utls::Matrix2::det (void) const"
.PP
.SS "void utls::Matrix2::dump (void) const"
.PP
.SS "void utls::Matrix2::eye ()"
.PP
.SS "double utls::Matrix2::fnorm (void) const"
.PP
.SS "void utls::Matrix2::fnormalize (void)"
.PP
.SS "\fBMatrix2\fP utls::Matrix2::inv (void) const"
.PP
.SS "void utls::Matrix2::inv_i (void)"
.PP
.SS "\fBMatrix2\fP utls::Matrix2::operator * (const \fBMatrix2\fP & m) const"
.PP
.SS "\fBMatrix2\fP utls::Matrix2::operator * (const double s) const"
.PP
.SS "\fBMatrix2\fP utls::Matrix2::operator+ (const \fBMatrix2\fP & m) const"
.PP
.SS "\fBMatrix2\fP utls::Matrix2::operator+ (const double s) const"
.PP
.SS "\fBMatrix2\fP utls::Matrix2::operator- (const \fBMatrix2\fP & m) const"
.PP
.SS "\fBMatrix2\fP utls::Matrix2::operator- (const double s) const"
.PP
.SS "\fBMatrix2\fP utls::Matrix2::operator/ (const double s) const"
.PP
.SS "void utls::Matrix2::operator= (const \fBMatrix2\fP & other)"
.PP
.SS "double* utls::Matrix2::operator[] (int row_idx) const"
.PP
.SS "void utls::Matrix2::QR (\fBMatrix2\fP & Q, \fBMatrix2\fP & R) const"
.PP
.SS "void utls::Matrix2::schur_sym (\fBMatrix2\fP & Q, \fBMatrix2\fP & T) const"
.PP
.SS "\fBMatrix2\fP utls::Matrix2::sqrt (void) const"
.PP
.SS "void utls::Matrix2::sqrt_i (void)"
.PP
.SS "void utls::Matrix2::svd (\fBMatrix2\fP & U, \fBMatrix2\fP & S, \fBMatrix2\fP & V) const"
.PP
.SS "double utls::Matrix2::trace (void) const"
.PP
.SS "\fBMatrix2\fP utls::Matrix2::transpose (void) const"
.PP
.SS "void utls::Matrix2::transpose_i (void)"
.PP
.SH "Member Data Documentation"
.PP 
.SS "double \fButls::Matrix2::a\fP[2][2]"
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen from the source code.
