.TH "libExtrema.h" 3 "22 Oct 2006" "Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libExtrema.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <algorithm>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <stdio.h>\fP
.br
\fC#include <ary.h>\fP
.br
\fC#include 'extremaConfig.h'\fP
.br
\fC#include 'extremaParams.h'\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBextrema\fP"
.br
.ti -1c
.RI "namespace \fBstd\fP"
.br
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBextrema::BoundaryPoint\fP"
.br
.RI "\fIA structure that holds coordinates of a point in \fBBoundaryRegion\fP i.e. the boundary representation of a region. \fP"
.ti -1c
.RI "struct \fBextrema::RLEItem\fP"
.br
.RI "\fIA structure that holds coordinates of a RLE element in \fBRLERegion\fP i.e. the RLE representation of a region. \fP"
.ti -1c
.RI "struct \fBextrema::Region\fP"
.br
.RI "\fIA structure with common statistics of \fBBoundaryRegion\fP and \fBRLERegion\fP. \fP"
.ti -1c
.RI "struct \fBextrema::RLERegion\fP"
.br
.RI "\fIDescription of a RLE region. \fP"
.ti -1c
.RI "struct \fBextrema::BoundaryRegion\fP"
.br
.RI "\fIDescription of a boundary region. \fP"
.ti -1c
.RI "struct \fBextrema::ExtremaStats\fP"
.br
.RI "\fITiming statistics of the detector, gathered only if TIME_STATS is set. \fP"
.ti -1c
.RI "struct \fBextrema::RLEExtrema\fP"
.br
.RI "\fIOld interface structure that holds result of getRLEExtrema. \fP"
.ti -1c
.RI "struct \fBextrema::BoundaryExtrema\fP"
.br
.RI "\fIOld interface structure that holds result of getBoundaryExtrema. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "BoundaryExtrema \fBextrema::getBoundaryExtrema\fP (const ExtremaParams &params, const ExtremaImage &image, int both=3)"
.br
.RI "\fIOld interface function, produces BoundaryRegions for a given image. Computes MSERs: both=1 +, both = 2 -, or both = 3 + and -. \fP"
.ti -1c
.RI "RLEExtrema \fBextrema::getRLEExtrema\fP (const ExtremaParams &par, const ExtremaImage &image, int both=3)"
.br
.RI "\fIOld interface function, produces RLERegions for a given image. Computes MSERs: both=1 +, both = 2 -, or both = 3 + and -. \fP"
.ti -1c
.RI "void \fBextrema::extremaPrepareImage\fP (const ExtremaParams &params, const ExtremaImage &image)"
.br
.RI "\fIPrepares image for detection of MSER regions. \fP"
.ti -1c
.RI "void \fBextrema::extremaAttachImage\fP (const ExtremaParams &params, \fButls::BAry\fP *image)"
.br
.RI "\fIAssigns already prepared image for detection of MSER regions. \fP"
.ti -1c
.RI "void \fBextrema::extremaInvertImage\fP ()"
.br
.RI "\fIInverts image in internal structure. \fP"
.ti -1c
.RI "void \fBextrema::extremaBoundaryRegions\fP (const ExtremaParams &params, bool inverted, vector< BoundaryRegion > &result)"
.br
.RI "\fIDetects MSERs inverted or not inverted image. \fP"
.ti -1c
.RI "void \fBextrema::extremaBoundaryEllRegions\fP (const ExtremaParams &params, bool inverted, vector< BoundaryRegion > &result)"
.br
.RI "\fIDetects MSERs inverted or not inverted image and computes centroids and second moments of each region. \fP"
.ti -1c
.RI "void \fBextrema::extremaRLERegions\fP (const ExtremaParams &params, bool inverted, vector< RLERegion > &result)"
.br
.RI "\fIDetects MSERs inverted or not inverted image and computes centroids and second moments of each region. \fP"
.ti -1c
.RI "void \fBextrema::extremaCleanup\fP (bool detach_only=false)"
.br
.RI "\fICleans up internal image structure. \fP"
.ti -1c
.RI "const ExtremaStats & \fBextrema::extremaStats\fP ()"
.br
.RI "\fIReturns timing statistics. \fP"
.ti -1c
.RI "void \fBextrema::exportRLEVector\fP (FILE *fid, vector< RLERegion > &rle_vector)"
.br
.ti -1c
.RI "void \fBextrema::exportBoundaryVector\fP (FILE *fid, vector< BoundaryRegion > &boundary_vector)"
.br
.ti -1c
.RI "void \fBextrema::exportBoundaryVectorGF\fP (FILE *fid, vector< BoundaryRegion > &boundary_vector)"
.br
.ti -1c
.RI "void \fBextrema::exportAffVector\fP (FILE *fid, vector< RLERegion > &rle_vector, double factor, int krys_compat)"
.br
.ti -1c
.RI "void \fBextrema::RLE2Ellipse\fP (const vector< RLEItem > &rle, double &barX, double &barY, double &sumX2, double &sumXY, double &sumY2)"
.br
.ti -1c
.RI "void \fBextrema::ReducedBoundary2RLE\fP (vector< BoundaryPoint > &reduced_boundary, vector< RLEItem > &rle)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Interface of MSER detector.
.PP
This file contains main external interface of the MSERs detector. 
.SH "Author"
.PP 
Generated automatically by Doxygen from the source code.
